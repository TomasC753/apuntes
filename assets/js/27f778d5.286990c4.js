"use strict";(self.webpackChunkapuntes_dart=self.webpackChunkapuntes_dart||[]).push([[1346],{8879:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var s=r(5893),a=r(1151);const o={},i="Resumen de Introducci\xf3n a los microservicios",d={id:"integraciones-web/resumen-introduccion-a-los-microservicios",title:"Resumen de Introducci\xf3n a los microservicios",description:"Unidad 1: Teor\xeda e historia",source:"@site/docs/integraciones-web/resumen-introduccion-a-los-microservicios.md",sourceDirName:"integraciones-web",slug:"/integraciones-web/resumen-introduccion-a-los-microservicios",permalink:"/apuntes/docs/integraciones-web/resumen-introduccion-a-los-microservicios",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Programa",permalink:"/apuntes/docs/integraciones-web/programa"}},c={},l=[{value:"Unidad 1: Teor\xeda e historia",id:"unidad-1-teor\xeda-e-historia",level:2},{value:"Tema 1. Historia de los microservicios",id:"tema-1-historia-de-los-microservicios",level:3},{value:"Caracter\xedsticas de los microservicios",id:"caracter\xedsticas-de-los-microservicios",level:4},{value:"Tipos de API",id:"tipos-de-api",level:4},{value:"Ventaja de los microservicios",id:"ventaja-de-los-microservicios",level:4},{value:"Tema 2. SOAP y REST",id:"tema-2-soap-y-rest",level:3},{value:"SOAP",id:"soap",level:4},{value:"REST",id:"rest",level:4},{value:"Tema 3. XML y JSON",id:"tema-3-xml-y-json",level:3},{value:"Estructura de SOAP-XML",id:"estructura-de-soap-xml",level:4},{value:"Troubleshooting",id:"troubleshooting",level:4},{value:"SOAPUI",id:"soapui",level:4},{value:"JSON",id:"json",level:4},{value:"Tema 4. Estructura de JSON",id:"tema-4-estructura-de-json",level:3},{value:"Tipos de valores",id:"tipos-de-valores",level:4},{value:"Array",id:"array",level:5},{value:"Objetos",id:"objetos",level:5},{value:"Unidad 2. Protocolos HTTP",id:"unidad-2-protocolos-http",level:2},{value:"Tema 1. 404 Titulo no encontrado",id:"tema-1-404-titulo-no-encontrado",level:3},{value:"URL",id:"url",level:4},{value:"Tema 2. Peticiones HTTP via API",id:"tema-2-peticiones-http-via-api",level:3},{value:"\xbfCuando utilizar los m\xe9todos PUT y POST en REST?",id:"cuando-utilizar-los-m\xe9todos-put-y-post-en-rest",level:4},{value:"Tema 3. C\xf3digos de respuesta",id:"tema-3-c\xf3digos-de-respuesta",level:3},{value:"Tema 4. Troubleshooting b\xe1sico",id:"tema-4-troubleshooting-b\xe1sico",level:3}];function t(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"resumen-de-introducci\xf3n-a-los-microservicios",children:"Resumen de Introducci\xf3n a los microservicios"}),"\n",(0,s.jsx)(n.h2,{id:"unidad-1-teor\xeda-e-historia",children:"Unidad 1: Teor\xeda e historia"}),"\n",(0,s.jsx)(n.h3,{id:"tema-1-historia-de-los-microservicios",children:"Tema 1. Historia de los microservicios"}),"\n",(0,s.jsx)(n.p,{children:"Aparecen con la necesidad d crear sistemas que sean f\xe1cilmente escalables y que impliquen un nivel menor de complejidad en cuanto a gesti\xf3n de proyectos."}),"\n",(0,s.jsxs)(n.p,{children:["Hasta su popularizaci\xf3n los desarrollos eran grandes ",(0,s.jsx)(n.strong,{children:"sistemas monol\xedticos"}),' que ha medida que crec\xedan su complejidad se hacia mucho mas grande y por ende eran costosos y dif\xedciles de mantener. La soluci\xf3n consisti\xf3 en distribuir el c\xf3digo respecto a las funciones que ten\xedan dichos sistemas en sistemas mas peque\xf1os, lo que permiti\xf3 distribuir la carga y "know how" de las funcionalidades en grupos especializados.']}),"\n",(0,s.jsx)(n.h4,{id:"caracter\xedsticas-de-los-microservicios",children:"Caracter\xedsticas de los microservicios"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Componentes:"})," Est\xe1n compuesto por componentes de software independientes, mantenidos individualmente y sustituibles."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Servicios:"})," Los componentes incluyen servicios disponibles para comunicarse bajo demanda, es decir, para recibir o emitir comunicaci\xf3n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Independientes:"})," Los componentes son independientes entre si, por lo que tampoco se afectan entre si y hasta pueden estar desarrollado en un lenguaje diferente al resto de componentes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Seguridad:"})," La comunicaci\xf3n entre microservicios esta cifrada con una capa de transporte mutuo (",(0,s.jsx)(n.strong,{children:"mTLS"}),") para proteger los datos durante el proceso."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Contenedorizaci\xf3n (dockerizacion):"})," Los microservicios suelen implantarse dentro de contenedores para mayor escalabilidad."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"tipos-de-api",children:"Tipos de API"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"API Interna o API privada:"})," Solo pueden ser accedidas por desarrolladores o por otros microservicios. Sirven para comunicar procesos internos dentro de un sistema entre si, reducir el trabajo aislado y mejorar la colaboraci\xf3n."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"API externa o API publica:"})," Proporciona un medio de intercambio de informaci\xf3n con fuentes externas al sistema. Cuando se habla de integrar un sistema basado en microservicios, se habla de integrar APIs externas entre si."]}),"\n",(0,s.jsx)(n.h4,{id:"ventaja-de-los-microservicios",children:"Ventaja de los microservicios"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Escalabilidad:"})," Dada su independencia, los microservicios son f\xe1cilmente escalables, ya que un cambio sobre no afectara a los otros."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modularidad:"})," Los servicios son m\xf3dulos independientes que pueden acoplarse o quitarse dependiendo de las necesidades del sistema."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Eficacia:"})," Los servicios son mantenidos por equipos especializados en el mismo, debido a su baja complejidad los miembros pueden capacitarse r\xe1pidamente para el mantenimiento de este."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Independencia T\xe9cnica:"})," Gracias a su independencia y a la comunicaci\xf3n por m\xe9todos ",(0,s.jsx)(n.strong,{children:"HTTP"}),", los m\xf3dulos pueden estar desarrollados con un lenguaje diferente uno del otro, y a un asi el sistema seguir funcionando correctamente."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"F\xe1cilmente integrable:"})," Al contar con los m\xe9todos HTTP para el intercambio de informaci\xf3n, tener una API externa vuelve al sistema f\xe1cilmente integrable para cualquier externo."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tema-2-soap-y-rest",children:"Tema 2. SOAP y REST"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"SOAP"})," (",(0,s.jsx)(n.strong,{children:"Simple Object Access Protocol"})," o protocolo de acceso a objetos simples) y ",(0,s.jsx)(n.strong,{children:"REST"})," (",(0,s.jsx)(n.strong,{children:"Representational State Transfer"})," o transferencia de estado representacional) son los dos enfoques distintos mas usados para transmitir datos de manera online permitiendo integrar diferentes sistemas o componentes de los mismo. Se valen del uso de est\xe1ndares para convertir una integraci\xf3n en interoperable."]}),"\n",(0,s.jsxs)(n.p,{children:["La diferencia entre estos dos esta en que ",(0,s.jsx)(n.strong,{children:"SOAP"})," es un protocolo oficial mantenido por el consorcio ",(0,s.jsx)(n.strong,{children:"World Wide Web"})," (",(0,s.jsx)(n.strong,{children:"W3C"}),"), mientras que ",(0,s.jsx)(n.strong,{children:"REST"})," es un conjunto de principios de arquitectura."]}),"\n",(0,s.jsx)(n.h4,{id:"soap",children:"SOAP"}),"\n",(0,s.jsxs)(n.p,{children:["Fue desarrollado por ",(0,s.jsx)(n.strong,{children:"Dave Wiener"})," junto con un equipo de desarrollo de Microsoft y de IBM para posibilitar la comunicaci\xf3n entre un cliente y los servicios de un servidor. Para que esto sea posible el cliente deber\xe1 enviar una solicitud a la API y el framework de SOAP determinara la forma que debe adoptar dicha solicitud por medio de unas reglas b\xe1sicas."]}),"\n",(0,s.jsx)(n.p,{children:"En lugar de darle al cliente solicitante acceso total al servidor, con un protocolo SOAP, se puede limitar el acceso a las funciones que necesita. La arquitectura del mismo, al facilitar un marco al que la aplicaci\xf3n puede incorporarse, permite que sistemas muy diferentes puedan integrarse entre si."}),"\n",(0,s.jsx)(n.h4,{id:"rest",children:"REST"}),"\n",(0,s.jsxs)(n.p,{children:["REST se caracteriza por su capacidad para transferir representaciones de recursos a trav\xe9s de HTTP, utilizando formatos de datos como ",(0,s.jsx)(n.strong,{children:"JSON"})," (",(0,s.jsx)(n.strong,{children:"JavaScript Object Notation"}),"), HTML, XML, XLT, Python, PHP o texto sin formato. Se centra en una arquitectura cliente-servidor sin estado, lo que significa que cada solicitud es independiente y no almacena informaci\xf3n del cliente entre solicitudes."]}),"\n",(0,s.jsxs)(n.p,{children:["Para que una API se considere de ",(0,s.jsx)(n.strong,{children:"RESTful"}),", debe cumplir los siguientes criterios:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Arquitectura cliente-servidor compuesta de clientes, servidores y recursos, con la gesti\xf3n de solicitudes a trav\xe9s de HTTP."}),"\n",(0,s.jsx)(n.li,{children:"Comunicaci\xf3n entre el cliente y el servidor sin estado. Esto implica que no se almacena la informaci\xf3n del cliente entre las solicitudes de GET y que cada una de ellas es independiente y est\xe1 desconectada del resto."}),"\n",(0,s.jsx)(n.li,{children:"Datos que pueden almacenarse en cach\xe9 y optimizan las interacciones entre el cliente y el servidor."}),"\n",(0,s.jsxs)(n.li,{children:["Una interfaz uniforme entre los elementos, para que la informaci\xf3n se transfiera de forma estandarizada. Para ello deben cumplirse las siguientes condiciones:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Los recursos solicitados deben ser identificables e independientes de las representaciones enviadas al cliente."}),"\n",(0,s.jsx)(n.li,{children:"El cliente debe poder manipular los recursos a trav\xe9s de la representaci\xf3n que recibe, ya que esta contiene suficiente informaci\xf3n para permitirlo."}),"\n",(0,s.jsx)(n.li,{children:"Los mensajes autodescriptivos que se env\xeden al cliente deben contener la informaci\xf3n necesaria para describir c\xf3mo debe procesarla."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Debe contener hipertexto o hipermedios, lo cual significa que, cuando el cliente acceda a alg\xfan recurso, debe poder utilizar hiperv\xednculos para buscar las dem\xe1s acciones que se encuentren disponibles en ese momento."}),"\n",(0,s.jsx)(n.li,{children:"Un sistema en capas que organiza en jerarqu\xedas invisibles para el cliente cada uno de los servidores (los encargados de la seguridad, del equilibrio de carga, etc.) que participan en la recuperaci\xf3n de la informaci\xf3n solicitada."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"En comparaci\xf3n con SOAP, REST resulta m\xe1s f\xe1cil de usar y m\xe1s ligero, ya que no tiene requisitos espec\xedficos como la mensajer\xeda XML. Su flexibilidad y simplicidad lo hacen m\xe1s adecuado para entornos donde la velocidad y la eficiencia son prioritarias."}),"\n",(0,s.jsx)(n.h3,{id:"tema-3-xml-y-json",children:"Tema 3. XML y JSON"}),"\n",(0,s.jsx)(n.h4,{id:"estructura-de-soap-xml",children:"Estructura de SOAP-XML"}),"\n",(0,s.jsxs)(n.p,{children:["Se basa en el metalenguaje ",(0,s.jsx)(n.strong,{children:"XML"})," (",(0,s.jsx)(n.strong,{children:"eXtensible Markup Language"}),"), el cual se explica como un conjunto de unidades de informaci\xf3n necesarias par a la correcta formaci\xf3n del fichero XML."]}),"\n",(0,s.jsx)(n.p,{children:"En la mayor\xeda de los casos, SOAP se integra tambi\xe9n en HTTP. El transporte se realiza a trav\xe9s del protocolo y se integra en su estructura."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n\x3c!-- Inbound Message --\x3e\r\n<soapenv:Envelope\r\nxmlns:soapenv="http://schemas.xmlsoap.ord/soap/envelope"\r\nxmlns:typ="http://www.mycompany.com/common/ServiceRequestHeader..."\r\nxmlns:typ1="http://www.mycompany.com/salesorder/SalesOrderSearch...">\r\n    <soapenv:Header>\r\n        <typ:ServiceRequestHeader>\r\n            <ApplicationCredential>\r\n                <ID>12345</ID>\r\n                <Credential>password</Credential>\r\n            </ApplicationCredential>\r\n            <ISOLanguageCode>EN</ISOLanguageCode>\r\n            <TransactionModel>\r\n                <UserCredential>\r\n                    <ID />\r\n                </UserCredential>\r\n            </TransactionModel>\r\n        </typ:ServiceRequestHeader>\r\n    </soapenv:Header>\r\n    <soapenv:Body>\r\n        <typ1:ServiceRequest>\r\n            <RequestPreamble>\r\n                <CompanyCode>SG01</CompanyCode>\r\n                <CustomerNumber>593</CustomerNumber>\r\n            </RequestPreamble>\r\n            <OrderSearchRequest>\r\n                <SearchCriteria>\r\n                    <OrderNumber>14912</OrderNumber>\r\n                </SearchCriteria>\r\n            </OrderSearchRequest>\r\n        </typ1:ServiceRequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>\n'})}),"\n",(0,s.jsx)(n.p,{children:"En ese ejemplo podemos observar un modelo de solicitud XML diferenciando tres estructuras b\xe1sicas:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Envelope:"})," ra\xedz de la estructura XML, identifica al mensaje SOAP como tal y por ende es obligatoria"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Header:"})," aqu\xed se incorpora informaci\xf3n referida a c\xf3mo debe ser procesado el mensaje. Tambi\xe9n pueden ir incluidas validaciones de seguridad."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Body:"})," se incluye toda informaci\xf3n necesaria para la llamada o respuesta del mensaje. En caso de faltar un campo obligatorio o incluir informaci\xf3n no permitida dentro del mismo, se devolver\xe1 un error, pero sin detalles del mismo, por lo cual se debe hacer un ",(0,s.jsx)(n.strong,{children:"troubleshooting manual"}),", campo a campo para descubrir donde est\xe1."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"El proceso de soluci\xf3n de problemas (Troubleshooting) en el contexto de env\xedo de llamadas en formato XML implica identificar y corregir los errores que puedan surgir durante la transmisi\xf3n. Cuando se recibe un error en respuesta a una llamada XML, el c\xf3digo de error no proporciona detalles espec\xedficos sobre la naturaleza del problema. Por lo tanto, es necesario revisar minuciosamente cada campo para asegurarse de que la informaci\xf3n enviada sea correcta."}),"\n",(0,s.jsx)(n.p,{children:"Para verificar la precisi\xf3n de la informaci\xf3n enviada, es fundamental consultar la documentaci\xf3n correspondiente para comprender las opciones disponibles en los campos habilitados del XML. Por ejemplo, un error puede ocurrir si se excede el l\xedmite de caracteres permitidos para un campo espec\xedfico, como en el caso de direcciones que exceden el l\xedmite establecido."}),"\n",(0,s.jsx)(n.p,{children:"Adem\xe1s, pueden surgir errores debido a caracteres inv\xe1lidos o no admitidos por el XML, como caracteres especiales. Otro escenario com\xfan es el error de autenticaci\xf3n, que puede ocurrir si las credenciales proporcionadas son incorrectas."}),"\n",(0,s.jsx)(n.p,{children:"Es importante destacar que pueden existir diversos tipos de errores, incluso varios dentro del mismo XML. La resoluci\xf3n de problemas requiere habilidad para identificar estos errores bas\xe1ndose en la documentaci\xf3n y el contenido del XML con errores. Una vez identificados, los problemas deben ser corregidos manualmente antes de volver a enviar la llamada XML para su procesamiento correcto."}),"\n",(0,s.jsx)(n.h4,{id:"soapui",children:"SOAPUI"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"SOAPUI"})," es una herramienta de prueba de servicios web ampliamente utilizada para probar, desarrollar y simular servicios web SOAP y RESTful."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Interfaz Gr\xe1fica de Usuario (GUI) Amigable: SOAPUI proporciona una interfaz gr\xe1fica de usuario intuitiva que facilita la creaci\xf3n, edici\xf3n y ejecuci\xf3n de pruebas de servicios web."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Soporte para Protocolos:"})," Soporta tanto el protocolo SOAP (Simple Object Access Protocol) como REST (Representational State Transfer), lo que permite probar una variedad de servicios web."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Creaci\xf3n de Pruebas Funcionales:"})," Permite a los usuarios crear pruebas funcionales mediante la creaci\xf3n de solicitudes HTTP o SOAP espec\xedficas y la definici\xf3n de las aserciones para verificar las respuestas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pruebas de Carga y Rendimiento:"})," SOAPUI permite la creaci\xf3n de pruebas de carga y rendimiento para evaluar el rendimiento de los servicios web bajo diferentes cargas y condiciones."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automatizaci\xf3n de Pruebas:"})," Ofrece capacidades de automatizaci\xf3n de pruebas, lo que permite ejecutar pruebas de forma automatizada como parte de un proceso de integraci\xf3n continua o de entrega continua (CI/CD)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Soporte para Scripting:"})," Permite la escritura de scripts en Groovy para personalizar y extender las pruebas seg\xfan sea necesario."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Entorno de Pruebas Completo:"})," SOAPUI proporciona un entorno completo para el desarrollo y la ejecuci\xf3n de pruebas de servicios web, incluyendo la capacidad de gestionar entornos de prueba y datos de prueba."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Soporte para Diversas Autenticaciones y Seguridad:"})," Ofrece soporte para varios mecanismos de autenticaci\xf3n y seguridad, como Basic Auth, WS-Security, OAuth, etc."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"json",children:"JSON"}),"\n",(0,s.jsxs)(n.p,{children:["Un ",(0,s.jsx)(n.strong,{children:"JSON"})," es una cadena cuyo formato recuerda al de los ",(0,s.jsx)(n.strong,{children:"objetos literales JavaScript"}),", popularizado por ",(0,s.jsx)(n.strong,{children:"Douglas Crockford"})," a mediados de los a\xf1os 2000. Es posible incluir los mismos tipos de datos b\xe1sicos dentro de un JSON que en un objeto est\xe1ndar de Javascript (cadenas, n\xfameros, arreglos, booleanos, y otros literales de objeto)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\r\n    {\r\n        "name": "Molecule Man",\r\n        "age": 29,\r\n        "secretIdentify": "Dan Jukes",\r\n        "Powers": [\r\n            "Radiation resistance",\r\n            "Turning tiny",\r\n            "Radiation blast"\r\n        ]\r\n    },\r\n    {\r\n        "name": "Madame Uppercut",\r\n        "age": 39,\r\n        "secretIdentify": "Jane Wilson",\r\n        "Powers": [\r\n            "Million tonne punch",\r\n            "Damage resistance",\r\n            "Superhuman reflexes"\r\n        ]\r\n    }\r\n]\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Un objeto en ",(0,s.jsx)(n.strong,{children:"JSON"}),' se encuentra definido por las llaves "{ }" y contiene campos que definen los ',(0,s.jsx)(n.strong,{children:"atributos"})," de ese ",(0,s.jsx)(n.strong,{children:"objeto"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Un ",(0,s.jsx)(n.strong,{children:"array"}),' se encuentra definido por los corchetes "[ ]" y pueden contener 0, 1 o m\xe1s ',(0,s.jsx)(n.strong,{children:"objetos"})," dentro. Cada uno de estos ",(0,s.jsx)(n.strong,{children:"objetos"})," ser\xe1 identificable empezando a contar desde el n\xfamero 0 (cero)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tema-4-estructura-de-json",children:"Tema 4. Estructura de JSON"}),"\n",(0,s.jsxs)(n.p,{children:["JSON es un formato de intercambio de datos ligero dise\xf1ado para ser f\xe1cilmente le\xeddo y escrito por humanos, as\xed como f\xe1cilmente interpretado y generado por m\xe1quinas. Se basa en un subconjunto del lenguaje de programaci\xf3n ",(0,s.jsx)(n.strong,{children:"JavaScript Standard ECMA-262"})," para definir las propiedades y atributos de los objetos."]}),"\n",(0,s.jsx)(n.p,{children:"JSON es un formato de texto independiente del lenguaje, lo que significa que puede ser utilizado con cualquier lenguaje de programaci\xf3n. Sin embargo, sigue convenciones ampliamente conocidas por los programadores de lenguajes de la familia C (C, C++, C#, Java, Javascript, Perl, Python, etc)."}),"\n",(0,s.jsx)(n.p,{children:"JSON est\xe1 compuesto por dos estructuras b\xe1sicas:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Una colecci\xf3n de pares de ",(0,s.jsx)(n.strong,{children:"clave/valor"}),", conocida en varios lenguajes como objeto, registro, estructura o lista de claves."]}),"\n",(0,s.jsx)(n.li,{children:"Una lista ordenada de valores, que se implementa com\xfanmente como arreglos, vectores, listas o secuencias en la mayor\xeda de los lenguajes de programaci\xf3n."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Las estructuras b\xe1sicas de JSON son compatibles con pr\xe1cticamente todos los lenguajes de programaci\xf3n, lo que lo convierte en un formato ideal para el intercambio de datos entre diferentes sistemas y plataformas."}),"\n",(0,s.jsx)(n.h4,{id:"tipos-de-valores",children:"Tipos de valores"}),"\n",(0,s.jsx)(n.h5,{id:"array",children:"Array"}),"\n",(0,s.jsx)(n.p,{children:"Un array es una colecci\xf3n ordenada de valores. Est\xe1 rodeado de corchetes y cada valor est\xe1 separado por una coma."}),"\n",(0,s.jsx)(n.h5,{id:"objetos",children:"Objetos"}),"\n",(0,s.jsx)(n.p,{children:"Un objeto contiene una clave y un valor. Hay Dos puntos despu\xe9s de cada clave y una coma despu\xe9s de cada valor. El objeto como valor debe seguir la misma regla que un objeto com\xfan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="ejemplo"',children:'{\r\n    "amigos": {\r\n        "nombre": "Pablo",\r\n        "apellido": "Fernandez"\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"String:"})," Es una secuencia establecida de cero o mas caracteres. Est\xe1 encerrado entre dos comillas dobles."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Numero:"})," El numero en JSON debe ser un entero o un punto flotante como ",(0,s.jsx)(n.code,{children:'{"Edad": 30}'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Booleano:"})," Puedes usar verdadero o falso como valor. Ejemplo ",(0,s.jsx)(n.code,{children:'{"Casado": true}'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Nulo:"})," Es para mostrar que no hay informaci\xf3n. Ejemplo ",(0,s.jsx)(n.code,{children:'{"Factor Sangu\xedneo": null}'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Datos JSON almacenados:"})," Hay dos formas para almacenar datos JSON: Objeto y vector..."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="Objeto"',children:'{\r\n    "nombre": "Pablo",\r\n    "apellido": "Fernandez",\r\n    "g\xe9nero": "masculino"\r\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="Usando vectores" {5-7}',children:'{\r\n    "nombre": "Pablo",\r\n    "apellido": "Fernandez",\r\n    "g\xe9nero": "masculino",\r\n    "hobby": [\r\n        "M\xfasica", "Futbol", "Karate"\r\n    ]\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Lo que diferencia esto del m\xe9todo anterior es el cuarto par clave/valor. Hobby es la clave y hay varios valores [Musica, Futbol y Karate] entre corchetes, que representan un vector."}),"\n",(0,s.jsxs)(n.p,{children:["Este proceso funciona utilizando lo que se denomina devoluciones de llamada (",(0,s.jsx)(n.strong,{children:"callbacks"}),"), que solicitar\xe1n un elemento espec\xedfico del vector sin obtener un error \u201cdel mismo origen\u201d (",(0,s.jsx)(n.strong,{children:"same-origin"}),")."]}),"\n",(0,s.jsx)(n.p,{children:"Y, afortunadamente, un array tambi\xe9n admite bucles, lo que te permite ejecutar comandos repetidos para buscar m\xfaltiples datos, haciendo que el proceso sea m\xe1s r\xe1pido y efectivo."}),"\n",(0,s.jsx)(n.h2,{id:"unidad-2-protocolos-http",children:"Unidad 2. Protocolos HTTP"}),"\n",(0,s.jsx)(n.h3,{id:"tema-1-404-titulo-no-encontrado",children:"Tema 1. 404 Titulo no encontrado"}),"\n",(0,s.jsxs)(n.p,{children:["En el protocolo ",(0,s.jsx)(n.strong,{children:"HTTP"})," intervienen dos partes, el servidor y el cliente quien es el que inicia la comunicaci\xf3n con el servidor y el mismo responde un texto con un encabezado (",(0,s.jsx)(n.strong,{children:"header"}),") y un cuerpo (",(0,s.jsx)(n.strong,{children:"body"}),") que determinan ciertos factores, como la informaci\xf3n a enviarse y recibirse (en el ",(0,s.jsx)(n.strong,{children:"body"}),") y hacia d\xf3nde estamos envi\xe1ndola, asi como nuestras credenciales, que nos identifican y dan acceso a ese servidor, tambi\xe9n llamadas metadatos (en el ",(0,s.jsx)(n.strong,{children:"header"}),")."]}),"\n",(0,s.jsx)(n.h4,{id:"url",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:["Las ",(0,s.jsx)(n.strong,{children:"URL"})," (",(0,s.jsx)(n.strong,{children:"Uniform Resource Locator"}),") sirven para identificar/localizar un recurso con el cual queremos operar. Tanto en API como en la web, las URL contienen el mismo formato."]}),"\n",(0,s.jsxs)(n.p,{children:["Las ",(0,s.jsx)(n.strong,{children:"URL"}),'s tienen un formato com\xfan que consiste en un protocolo seguido por un dominio y una ruta que identifica el recurso espec\xedfico. Por ejemplo, "',(0,s.jsx)(n.a,{href:"http://www.servidor.com/clientes",children:"http://www.servidor.com/clientes"}),'" indica que se est\xe1 accediendo a la secci\xf3n de clientes en el servidor.']}),"\n",(0,s.jsxs)(n.p,{children:["Dependiendo del tipo de API (",(0,s.jsx)(n.strong,{children:"REST"})," o ",(0,s.jsx)(n.strong,{children:"SOAP"}),"), la informaci\xf3n devuelta puede estar en diferentes formatos. En el caso de las APIs ",(0,s.jsx)(n.strong,{children:"REST"}),", la informaci\xf3n se devuelve com\xfanmente en formato ",(0,s.jsx)(n.strong,{children:"JSON"}),", mientras que en las APIs ",(0,s.jsx)(n.strong,{children:"SOAP"})," se devuelve en formato ",(0,s.jsx)(n.strong,{children:"XML"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Para consultar o manipular la informaci\xf3n en una API REST, se utilizan los ",(0,s.jsx)(n.strong,{children:"m\xe9todos HTTP"})," disponibles, tambi\xe9n conocidos como ",(0,s.jsx)(n.strong,{children:"request"}),". Estos m\xe9todos permiten realizar operaciones como obtener datos (",(0,s.jsx)(n.strong,{children:"GET"}),"), crear nuevos recursos (",(0,s.jsx)(n.strong,{children:"POST"}),"), actualizar recursos existentes (",(0,s.jsx)(n.strong,{children:"PUT/PATCH"}),"), o eliminar recursos (",(0,s.jsx)(n.strong,{children:"DELETE"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"tema-2-peticiones-http-via-api",children:"Tema 2. Peticiones HTTP via API"}),"\n",(0,s.jsx)(n.p,{children:"Existe una gran cantidad de verbos o request, los mas usados son los siguiente:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GET:"})," Se utiliza para obtener informaci\xf3n desde el recurso API y solo es una solicitud de lectura."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"POST:"})," Se utiliza para crear un nuevo recurso dentro de una API. El cuerpo del mensaje (body) de solicitud proporciona los detalles del nuevo recurso bas\xe1ndose en la estructura que se haya definido en la arquitectura de la API para ese tipo de elementos en particular."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PUT:"})," Crea o sustituye un recurso, aunque normalmente se lo utiliza para actualizar alg\xfan registro en particular. Se debe enviar toda la estructura del body que est\xe1 definida por la API y enviar all\xed tambi\xe9n el valor nuevo que queremos actualizar."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PATCH:"})," Realiza una actualizaci\xf3n parcial de un recurso. El body de la solicitud especifica el conjunto de cambios que se aplican al recurso."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DELETE:"})," Se borra el registro solicitado, normalmente se  detalla en la URL del request."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Las principales diferencias entre POST y PUT son:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["El m\xe9todo PUT es ",(0,s.jsx)(n.strong,{children:"idempotente"})," en HTTP, lo que significa que producir\xe1 el mismo resultado si se ejecuta varias veces."]}),"\n",(0,s.jsxs)(n.li,{children:["El m\xe9todo POST no es ",(0,s.jsx)(n.strong,{children:"idempotente"}),", ya que si se ejecuta varias veces se estar\xedan creando varios elementos."]}),"\n",(0,s.jsx)(n.li,{children:"El m\xe9todo POST se utiliza para crear una nueva entidad."}),"\n",(0,s.jsx)(n.li,{children:"El m\xe9todo PUT se utiliza para actualizar (reemplazar) una entidad existente. Se debe tener presente que, si en la trama se env\xeda solo una parte de los valores a actualizar, los dem\xe1s campos se setear\xe1n a null o vac\xedo."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"cuando-utilizar-los-m\xe9todos-put-y-post-en-rest",children:"\xbfCuando utilizar los m\xe9todos PUT y POST en REST?"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"POST"}),(0,s.jsx)(n.th,{children:"PUT"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Para crear nuevos recursos"}),(0,s.jsx)(n.td,{children:"Para actualizar los recursos existentes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Cuando se necesita que el servidor controle la generaci\xf3n de URL de los recursos"}),(0,s.jsx)(n.td,{children:'Cuando se conozca el "Id" del Objeto'})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"tema-3-c\xf3digos-de-respuesta",children:"Tema 3. C\xf3digos de respuesta"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["1xx Respuestas informativas: Esta respuesta significa que el servidor ha recibido los encabezados de la petici\xf3n.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"101 Switching Protocols:"})," El servidor acepta el cambio de protocolo propuesto por el navegador"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"102 Processing:"})," El servidor aun esta procesando la petici\xf3n del navegador."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["2xx Peticiones correctas: Indica que la petici\xf3n fue recibida correctamente, entendida y aceptada.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"200 OK:"})," Respuesta est\xe1ndar para peticiones correctas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"201 Created:"})," La petici\xf3n ha sido completada y ha resultado en la creaci\xf3n de un nuevo recurso."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"202 Accepted:"})," La petici\xf3n ha sido aceptada para procesamiento, pero este no ha sido completado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"204 No Content:"})," La petici\xf3n ha sido completado con \xe9xito, pero su respuesta no tiene contenido."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["3xx Redirecciones: El cliente tiene que tomar una acci\xf3n adicional para completar la petici\xf3n.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"301 Moved Permanently:"})," Esta y todas las peticiones futuras deber\xe1n ser dirigidas a la URL dada."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"302 Found:"})," Este es el c\xf3digo de redirecci\xf3n mas popular."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"307 Temporary Redirect:"})," Se trata de una redirecci\xf3n que deber\xeda haber sido hecha con otra URI, pero aun puede ser procesado por la URI proporcionada."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"308 Permanent Redirect:"})," El recurso solicitado por el navegador se encuentra en otro lugar y este cambio es permanente."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["4xx Errores del cliente:  Para casos en los que el cliente parece haber errado un petici\xf3n.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"400 Bad Request:"})," el servidor no procesar\xe1 la solicitud, porque no puede o no debe, debido a algo que es percibido como un error del cliente (por ejemplo, solicitud malformada, sintaxis err\xf3nea, etc.). La solicitud contiene sintaxis err\xf3nea y no deber\xeda repetirse."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"401 Authorization Required:"})," similar al 403 Forbidden, pero espec\xedficamente para su uso cuando la autenticaci\xf3n es posible, pero ha fallado o a\xfan no ha sido provista. Vea autenticaci\xf3n HTTP b\xe1sica y digest access authentication."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"403 Forbidden:"})," la solicitud fue legal, pero el servidor se reh\xfasa a responderla, dado que el cliente no tiene los privilegios para realizarla. En contraste con una respuesta 401 No autorizado, autenticarse previamente no va a cambiar la respuesta."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"404 Not Found:"})," recurso no encontrado. Se utiliza cuando el servidor web no encuentra la p\xe1gina o recurso solicitado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"405 Method Not Allowed:"})," una petici\xf3n fue hecha a una URI utilizando un m\xe9todo de solicitud no soportado por dicha URI. Por ejemplo, cuando se utiliza GET en un formulario que requiere que los datos sean presentados v\xeda POST; o cuando se utiliza PUT en un recurso de solo lectura."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"408 Request Timeout:"})," el cliente fall\xf3 al continuar la petici\xf3n, excepto durante la ejecuci\xf3n de videos Adobe Flash cuando solo significa que el usuario cerr\xf3 la ventana de video o se movi\xf3 a otro."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"409 Conflict:"})," indica que la solicitud no pudo ser procesada debido a un conflicto con el estado actual del recurso que esta identifica."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"410 Gone:"})," indica que el recurso solicitado ya no est\xe1 disponible y no lo estar\xe1 de nuevo. Deber\xeda ser utilizado cuando un recurso ha sido quitado de forma permanente."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"414 URI Too Long:"})," la URI de la petici\xf3n del navegador es demasiado grande y por ese motivo el servidor no la procesa."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"428 Precondition Required:"})," el servidor requiere que la petici\xf3n del navegador sea condicional (este tipo de peticiones evitan los problemas producidos al modificar con PUT un recurso que ha sido modificado por otra parte)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"429 Too Many Requests:"})," hay muchas conexiones desde esta direcci\xf3n de internet."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"431 Request Header Fields Too Large:"})," el servidor no puede procesar la petici\xf3n, porque una de las cabeceras de la petici\xf3n es demasiado grande. Este error tambi\xe9n se produce cuando la suma del tama\xf1o de todas las peticiones es demasiado grande."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["5xx Errores del servidor: Indica casos en los cuales el servidor tiene registrado, a\xfan antes de servir la solicitud, que esta errado o es incapaz de ejecutar la petici\xf3n","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"500 Internal Server Error:"})," es un c\xf3digo com\xfanmente emitido por aplicaciones empotradas en servidores web, las cuales que generan contenido din\xe1micamente, por ejemplo, aplicaciones montadas en IIS o Tomcat, cuando se encuentran con situaciones de error ajenas a la naturaleza del servidor web."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"502 Bad Gateway:"})," el servidor est\xe1 actuando de proxy o gateway, y ha recibido una respuesta inv\xe1lida del otro servidor, por lo que no puede responder adecuadamente a la petici\xf3n del navegador."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"503 Service Temporarily Unavailable:"})," el servidor no puede responder a la petici\xf3n del navegador porque est\xe1 congestionado o est\xe1 realizando tareas de mantenimiento."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"504 Gateway Timeout:"})," el servidor est\xe1 actuando de proxy o gateway, y no ha recibido a tiempo una respuesta del otro servidor, por lo que no puede responder adecuadamente a la petici\xf3n del navegador."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Estos c\xf3digos de estado ayudan a hacer el troubleshooting necesario para detectar si todo va de acuerdo con lo esperado o si existe alg\xfan inconveniente y de donde proviene."}),"\n",(0,s.jsx)(n.h3,{id:"tema-4-troubleshooting-b\xe1sico",children:"Tema 4. Troubleshooting b\xe1sico"}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.strong,{children:"Troubleshooting"})," Se refiere al proceso de identificar, diagnosticar y resolver problemas en un sistema o proceso, en el caso de las APIs, esto implica detectar y solucionar errores en las solicitudes o respuestas."]}),"\n",(0,s.jsx)(n.p,{children:"Para hacer un troubleshooting b\xe1sico se pueden tener en cuenta las siguientes cuestiones:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\xbfEs nuestro c\xf3digo de autorizaci\xf3n v\xe1lido y esta correctamente escrito?"}),"\n",(0,s.jsx)(n.li,{children:"\xbfLa URL esta bien escrita?"}),"\n",(0,s.jsx)(n.li,{children:"Si la URL cuenta con variables, \xbfestas no fueron modificadas?"}),"\n",(0,s.jsx)(n.li,{children:"\xbfEstamos usando el m\xe9todo correcto para la API a la que intentamos conectarnos?"}),"\n",(0,s.jsx)(n.li,{children:"\xbfTenemos problemas de conectividad?"}),"\n",(0,s.jsx)(n.li,{children:"\xbfEl protocolo de la URL est\xe1 bien escrito?"}),"\n",(0,s.jsx)(n.li,{children:"Si estamos enviando una query en nuestra URL (identificable por el signo \u2018=?\u2019 en la URL), \xbfest\xe1 bien escrita?"}),"\n",(0,s.jsxs)(n.li,{children:["Si estamos enviando una query con una b\xfasqueda por fecha, \xbfel formato de la fecha est\xe1 bien escrito?. El formato en JSON es de ",(0,s.jsxs)(n.strong,{children:["AAAA-MM-DDTHH:MM",":SS",".ZZHH"]}),", donde ZZHH corresponde a zona horaria y se escribe con 3 n\xfameros y una letra"]}),"\n",(0,s.jsx)(n.li,{children:"Si estamos utilizando una solicitud para enviar informaci\xf3n (PUT, POST, PATCH), \xbfla estructura del JSON en el cuerpo del mensaje se encuentra correctamente escrita? \xbfEs la estructura que el servidor est\xe1 esperando?"}),"\n",(0,s.jsx)(n.li,{children:"Si estamos enviando informaci\xf3n en el body y dicho tipo de dato es un string, \xbfestamos enviando alg\xfan car\xe1cter especial que puede no ser v\xe1lido?"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>i});var s=r(7294);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);